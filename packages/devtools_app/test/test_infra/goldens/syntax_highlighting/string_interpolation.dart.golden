>// Copyright 2022 The Chromium Authors. All rights reserved.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash.dart
>// Use of this source code is governed by a BSD-style license that can be
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash.dart
>// found in the LICENSE file.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash.dart
>
>void values() {
#^^^^ storage.type.primitive.dart
#     ^^^^^^ entity.name.function.dart
>  final i = 1;
#  ^^^^^ storage.modifier.dart
#          ^ keyword.operator.assignment.dart
#            ^ constant.numeric.dart
#             ^ punctuation.terminator.dart
>  final j = 2;
#  ^^^^^ storage.modifier.dart
#          ^ keyword.operator.assignment.dart
#            ^ constant.numeric.dart
#             ^ punctuation.terminator.dart
>
>  print('the value of \$i is $i');
#  ^^^^^ entity.name.function.dart
#        ^^^^^^^^^^^^^^ string.interpolated.single.dart
#                      ^^ string.interpolated.single.dart constant.character.escape.dart
#                        ^^^^^ string.interpolated.single.dart
#                             ^ string.interpolated.single.dart string.interpolated.expression.dart
#                              ^ string.interpolated.single.dart string.interpolated.expression.dart variable.parameter.dart
#                               ^ string.interpolated.single.dart
#                                 ^ punctuation.terminator.dart
>  print('the value after \$i is ${i + 1}');
#  ^^^^^ entity.name.function.dart
#        ^^^^^^^^^^^^^^^^^ string.interpolated.single.dart
#                         ^^ string.interpolated.single.dart constant.character.escape.dart
#                           ^^^^^ string.interpolated.single.dart
#                                ^^ string.interpolated.single.dart string.interpolated.expression.dart
#                                  ^ string.interpolated.single.dart string.interpolated.expression.dart variable.parameter.dart
#                                   ^^^ string.interpolated.single.dart string.interpolated.expression.dart
#                                      ^ string.interpolated.single.dart string.interpolated.expression.dart constant.numeric.dart
#                                       ^ string.interpolated.single.dart string.interpolated.expression.dart
#                                        ^ string.interpolated.single.dart
#                                          ^ punctuation.terminator.dart
>  print('the value of \$i + \$j is ${i + j}');
#  ^^^^^ entity.name.function.dart
#        ^^^^^^^^^^^^^^ string.interpolated.single.dart
#                      ^^ string.interpolated.single.dart constant.character.escape.dart
#                        ^^^^ string.interpolated.single.dart
#                            ^^ string.interpolated.single.dart constant.character.escape.dart
#                              ^^^^^ string.interpolated.single.dart
#                                   ^^ string.interpolated.single.dart string.interpolated.expression.dart
#                                     ^ string.interpolated.single.dart string.interpolated.expression.dart variable.parameter.dart
#                                      ^^^ string.interpolated.single.dart string.interpolated.expression.dart
#                                         ^ string.interpolated.single.dart string.interpolated.expression.dart variable.parameter.dart
#                                          ^ string.interpolated.single.dart string.interpolated.expression.dart
#                                           ^ string.interpolated.single.dart
#                                             ^ punctuation.terminator.dart
>}
>
>void functions() {
#^^^^ storage.type.primitive.dart
#     ^^^^^^^^^ entity.name.function.dart
>  print('${() {
#  ^^^^^ entity.name.function.dart
#        ^ string.interpolated.single.dart
#         ^^^^^^ string.interpolated.single.dart string.interpolated.expression.dart
>    return 'Hello';
#^^^^ string.interpolated.single.dart string.interpolated.expression.dart
#    ^^^^^^ string.interpolated.single.dart string.interpolated.expression.dart variable.parameter.dart
#          ^^^^^^^^^ string.interpolated.single.dart string.interpolated.expression.dart
>  }}');
#^^^ string.interpolated.single.dart string.interpolated.expression.dart
#   ^^ string.interpolated.single.dart
#      ^ punctuation.terminator.dart
>  print('print(${() {
#  ^^^^^ entity.name.function.dart
#        ^^^^^^^ string.interpolated.single.dart
#               ^^^^^^ string.interpolated.single.dart string.interpolated.expression.dart
>    return 'Hello';
#^^^^ string.interpolated.single.dart string.interpolated.expression.dart
#    ^^^^^^ string.interpolated.single.dart string.interpolated.expression.dart variable.parameter.dart
#          ^^^^^^^^^ string.interpolated.single.dart string.interpolated.expression.dart
>  }()})');
#^^^ string.interpolated.single.dart string.interpolated.expression.dart
#   ^^^^^ string.interpolated.single.dart
#         ^ punctuation.terminator.dart
>  print('${() => 'Hello'}');
#  ^^^^^ entity.name.function.dart
#        ^ string.interpolated.single.dart
#         ^^^^^^^^^^^^^^^^ string.interpolated.single.dart string.interpolated.expression.dart
#                         ^ string.interpolated.single.dart
#                           ^ punctuation.terminator.dart
>  print('print(${(() => 'Hello')()})');
#  ^^^^^ entity.name.function.dart
#        ^^^^^^^ string.interpolated.single.dart
#               ^^^^^^^^^^^^^^^^^^^^ string.interpolated.single.dart string.interpolated.expression.dart
#                                   ^^ string.interpolated.single.dart
#                                      ^ punctuation.terminator.dart
>}
